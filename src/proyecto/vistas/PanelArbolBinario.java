/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyecto.vistas;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.awt.Component;

import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JComponent;

import javax.swing.JLabel;
import javax.swing.JPanel;

import proyecto.algoritmos.*;
import proyecto.componentes.*;
import proyecto.utils.*;

/**
 *
 * @author ABEL
 */
public class PanelArbolBinario extends javax.swing.JPanel {
    private final ArbolBinario arbol = new ArbolBinario();
    Color bgColor = new Color(238,238,238);

    /**
     * Creates new form Inicio
     */
    public PanelArbolBinario() {
        initComponents();
    }

    private JComponent crearVistaArbol(NodoArbol nodo) {
        if (nodo == null) {
            return Box.createHorizontalBox();
        }

        boolean hayHijoIzquierdo = nodo.izquierda != null;
        boolean hayHijoDerecho = nodo.derecha != null;
        boolean ambosHijos = hayHijoIzquierdo && hayHijoDerecho;
        boolean haySoloUno = (hayHijoIzquierdo || hayHijoDerecho) && !(ambosHijos);

        String idActual = nodo.toString();
        String ligaDer = hayHijoDerecho ? nodo.derecha.toString() : "";
        String ligaIzq = hayHijoIzquierdo ? nodo.izquierda.toString() : "";
            
        PanelArbol nodoPanel = new PanelArbol(nodo.informacion, ligaIzq, ligaDer, idActual);
        
        if (!nodo.visitado) {
            nodoPanel.setInactiveColors();
        }
        
        Panel.lockSize(nodoPanel);
        JPanel hijosPanel = new JPanel();
        hijosPanel.setBackground(bgColor);
        
        hijosPanel.setLayout(new BoxLayout(hijosPanel, BoxLayout.X_AXIS));
        hijosPanel.add(crearVistaArbol(nodo.izquierda));
        
        // solo para separar y que no me quede todo junto
        hijosPanel.add(Box.createHorizontalStrut(haySoloUno ? 64 : 8));
        hijosPanel.add(crearVistaArbol(nodo.derecha));

        JPanel contenedor = new JPanel();
        contenedor.setBackground(bgColor);
        
        contenedor.setLayout(new BoxLayout(contenedor, BoxLayout.Y_AXIS));
        nodoPanel.setAlignmentX(Component.CENTER_ALIGNMENT);
        hijosPanel.setAlignmentX(Component.CENTER_ALIGNMENT);

        contenedor.add(nodoPanel);
        
        if (ambosHijos) {
            JLabel conector = Label.crear("┌──────┴──────┐");
            contenedor.add(conector);
        } else if (hayHijoIzquierdo) {
            JLabel conector = Label.crear("┌─┘");
            contenedor.add(conector);
        } else if (hayHijoDerecho) {
            JLabel conector = Label.crear("└─┐");
            contenedor.add(conector);
        }
        
        contenedor.add(hijosPanel);
        return contenedor;
    }

    private void renderNodos() {
        visorPanel.removeAll();
        visorPanel.setLayout(new BorderLayout());

        JComponent arbolVista = crearVistaArbol(arbol.getRaiz());
        visorPanel.add(arbolVista, BorderLayout.CENTER);

        visorPanel.revalidate();
        visorPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pageTitle = new javax.swing.JLabel();
        visorLista = new javax.swing.JScrollPane();
        visorPanel = new javax.swing.JPanel();
        titleSeccion = new javax.swing.JLabel();
        labelValor = new javax.swing.JLabel();
        nuevoValor = new javax.swing.JTextField();
        botonEjecutar = new javax.swing.JButton();
        borrarEstructura = new javax.swing.JButton();
        mostrarLista = new javax.swing.JButton();
        labelAlgoritmos = new javax.swing.JLabel();
        selecionarAlgoritmo = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pageTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pageTitle.setText("Arbol Binario");
        jPanel1.add(pageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        visorLista.setBackground(new java.awt.Color(238, 242, 255));
        visorLista.setBorder(null);
        visorLista.setAutoscrolls(true);
        visorLista.setFocusable(false);

        visorPanel.setBackground(new java.awt.Color(238, 238, 238));
        visorPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(14, 14, 14, 14));
        visorPanel.setToolTipText("");
        visorPanel.setLayout(new javax.swing.BoxLayout(visorPanel, javax.swing.BoxLayout.X_AXIS));
        visorLista.setViewportView(visorPanel);

        jPanel1.add(visorLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 600, 260));

        titleSeccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titleSeccion.setText("Algoritmos Arbol Binario");
        jPanel1.add(titleSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 330, -1, -1));

        labelValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelValor.setText("Ingrese un número");
        jPanel1.add(labelValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, 130, 20));

        nuevoValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nuevoValor.setToolTipText("");
        nuevoValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nuevoValorKeyTyped(evt);
            }
        });
        jPanel1.add(nuevoValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 240, 30));

        botonEjecutar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        botonEjecutar.setText("Ejecutar Algoritmo");
        botonEjecutar.setToolTipText("");
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 240, 40));

        borrarEstructura.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        borrarEstructura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/eraser.png"))); // NOI18N
        borrarEstructura.setToolTipText("Ejecutar toString()");
        borrarEstructura.setBorder(null);
        borrarEstructura.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        borrarEstructura.setFocusable(false);
        borrarEstructura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarEstructuraActionPerformed(evt);
            }
        });
        jPanel1.add(borrarEstructura, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 40, 40));

        mostrarLista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mostrarLista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/file-scan.png"))); // NOI18N
        mostrarLista.setToolTipText("Ejecutar toString()");
        mostrarLista.setBorder(null);
        mostrarLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mostrarLista.setFocusable(false);
        mostrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarListaActionPerformed(evt);
            }
        });
        jPanel1.add(mostrarLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 40, 40));

        labelAlgoritmos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelAlgoritmos.setText("Seleccione el algoritmo deseado");
        jPanel1.add(labelAlgoritmos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, 20));

        selecionarAlgoritmo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selecionarAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insertar Nodo", "Recorrer PreOrder", "Recorrer InOrder", "Recorrer PostOrder", "Obtener Altura", "Obtener Peso", "Buscar", "Eliminar" }));
        selecionarAlgoritmo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selecionarAlgoritmoItemStateChanged(evt);
            }
        });
        jPanel1.add(selecionarAlgoritmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 400, 240, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        // TODO add your handling code here:
        String dato = nuevoValor.getText().trim();
        int numero = Integer.parseInt(dato);
        String opcion = (String) selecionarAlgoritmo.getSelectedItem();
        
        switch (opcion) {
            case "Insertar Nodo" -> arbol.insertar(numero);
            case "Recorrer PreOrder" -> arbol.preOrden();
            case "Recorrer InOrder" -> arbol.inOrden();
            case "Recorrer PostOrder" -> arbol.postOrden();
            case "Obtener Altura" -> arbol.obtenerAltura();
            case "Obtener Peso" -> arbol.obtenerPeso();
            case "Buscar" -> arbol.buscar(numero);
            case "Eliminar" -> arbol.buscar(numero);
        }

        renderNodos();
        nuevoValor.setText("");
        nuevoValor.requestFocus();
    }//GEN-LAST:event_botonEjecutarActionPerformed

    private void mostrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarListaActionPerformed
        // TODO add your handling code here:
        String datos = arbol.toString();
        String texto = "El Arbol Binario tiene: " + datos;
        Aviso.warn(texto);
    }//GEN-LAST:event_mostrarListaActionPerformed

    private void selecionarAlgoritmoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selecionarAlgoritmoItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String seleccion = (String) selecionarAlgoritmo.getSelectedItem();

            labelValor.setText("Ingrese un número");
            nuevoValor.setEnabled(true);

            switch (seleccion) {
                case "Recorrer PreOrder" -> {
                    labelValor.setText("No disponible");
                    nuevoValor.setEnabled(false);
                }
                case "Recorrer InOrder" -> {
                    labelValor.setText("No disponible");
                    nuevoValor.setEnabled(false);
                }
                case "Recorrer PostOrder" -> {
                    labelValor.setText("No disponible");
                    nuevoValor.setEnabled(false);
                }
            }
        }
    }//GEN-LAST:event_selecionarAlgoritmoItemStateChanged

    private void nuevoValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nuevoValorKeyTyped
        // TODO add your handling code here:
        if (!Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_nuevoValorKeyTyped

    private void borrarEstructuraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarEstructuraActionPerformed
        // TODO add your handling code here:
        arbol.borrarArbol();
        renderNodos();
    }//GEN-LAST:event_borrarEstructuraActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrarEstructura;
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAlgoritmos;
    private javax.swing.JLabel labelValor;
    private javax.swing.JButton mostrarLista;
    private javax.swing.JTextField nuevoValor;
    private javax.swing.JLabel pageTitle;
    private javax.swing.JComboBox<String> selecionarAlgoritmo;
    private javax.swing.JLabel titleSeccion;
    private javax.swing.JScrollPane visorLista;
    private javax.swing.JPanel visorPanel;
    // End of variables declaration//GEN-END:variables
}
