/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package proyecto.vistas;

import proyecto.utils.Aviso;
import java.awt.event.ItemEvent;
import java.awt.Color;

import javax.swing.JLabel;

import proyecto.algoritmos.*;
import proyecto.componentes.*;
import proyecto.utils.*;

/**
 *
 * @author ABEL
 */
public class PanelListaCircular extends javax.swing.JPanel {
    private final ListaCircular lista = new ListaCircular();

    /**
     * Creates new form Inicio
     */
    public PanelListaCircular() {
        initComponents();
        mostrarReferencia(false);
    }

    private void mostrarReferencia(boolean mostrar) {
        valorReferencia.setVisible(mostrar);
        labelReferencia.setVisible(mostrar);
    }

    private void renderNodos() {
        visorPanel.removeAll();

        NodoCircular actual = lista.getCabeza();

        if (actual == null) {
            visorPanel.revalidate();
            visorPanel.repaint();
            return;
        }

        NodoCircular inicio = actual;

        do {
            String idActual = actual.toString();
            String enlace = actual.enlace != null ? actual.enlace.toString() : "null";

            PanelNodo nodoPanel = new PanelNodo(actual.informacion, enlace, idActual);
            
            nodoPanel.setColorInfo(new Color(234,179,8));
            nodoPanel.setColorLiga(new Color(161,98,7));
            nodoPanel.setColorPuntero(new Color(113,63,18));
            
            Panel.lockSize(nodoPanel);
            visorPanel.add(nodoPanel);

            if (actual.enlace != null && actual.enlace != lista.getCabeza()) {
                JLabel flecha = Label.crear("→");
                visorPanel.add(flecha);
            } else {
                JLabel flecha = Label.crear("⤴");
                visorPanel.add(flecha);
            }

            actual = actual.enlace;
        } while (actual != inicio);

        visorPanel.revalidate();
        visorPanel.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pageTitle = new javax.swing.JLabel();
        visorLista = new javax.swing.JScrollPane();
        visorPanel = new javax.swing.JPanel();
        titleSeccion = new javax.swing.JLabel();
        labelAlgoritmos = new javax.swing.JLabel();
        selecionarAlgoritmo = new javax.swing.JComboBox<>();
        labelValor = new javax.swing.JLabel();
        nuevoValor = new javax.swing.JTextField();
        labelReferencia = new javax.swing.JLabel();
        valorReferencia = new javax.swing.JTextField();
        botonEjecutar = new javax.swing.JButton();
        mostrarLista = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pageTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pageTitle.setText("Listas Circulares Simples");
        jPanel1.add(pageTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        visorLista.setBackground(new java.awt.Color(218, 218, 240));
        visorLista.setBorder(null);
        visorLista.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        visorLista.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        visorLista.setAutoscrolls(true);
        visorLista.setFocusable(false);

        visorPanel.setBackground(new java.awt.Color(254, 252, 232));
        visorPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(14, 14, 14, 14));
        visorPanel.setLayout(new javax.swing.BoxLayout(visorPanel, javax.swing.BoxLayout.X_AXIS));
        visorLista.setViewportView(visorPanel);

        jPanel1.add(visorLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 600, 100));

        titleSeccion.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        titleSeccion.setText("Algoritmos Circulares Simples");
        jPanel1.add(titleSeccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        labelAlgoritmos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelAlgoritmos.setText("Seleccione el algoritmo deseado");
        jPanel1.add(labelAlgoritmos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, 20));

        selecionarAlgoritmo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        selecionarAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insertar al final", "Insertar al inicio", "Insertar antes de X", "Insertar despues de X", "Eliminar al final", "Eliminar al inicio", "Elimina X", "Elimina antes de X" }));
        selecionarAlgoritmo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selecionarAlgoritmoItemStateChanged(evt);
            }
        });
        jPanel1.add(selecionarAlgoritmo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 240, 30));

        labelValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelValor.setText("Ingrese el valor a insertar");
        jPanel1.add(labelValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, -1, 20));

        nuevoValor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nuevoValor.setToolTipText("");
        jPanel1.add(nuevoValor, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 240, 30));

        labelReferencia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelReferencia.setText("Ingrese la referencia");
        jPanel1.add(labelReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, 20));

        valorReferencia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        valorReferencia.setToolTipText("");
        jPanel1.add(valorReferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 320, 240, 30));

        botonEjecutar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        botonEjecutar.setText("Ejecutar algoritmo");
        botonEjecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEjecutarActionPerformed(evt);
            }
        });
        jPanel1.add(botonEjecutar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 240, 40));

        mostrarLista.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        mostrarLista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/icons/file-scan.png"))); // NOI18N
        mostrarLista.setToolTipText("Ejecutar toString()");
        mostrarLista.setBorder(null);
        mostrarLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mostrarLista.setFocusable(false);
        mostrarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarListaActionPerformed(evt);
            }
        });
        jPanel1.add(mostrarLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 0, 40, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botonEjecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEjecutarActionPerformed
        // TODO add your handling code here:

        String opcion = (String) selecionarAlgoritmo.getSelectedItem();
        String valor = nuevoValor.getText().trim();
        String referencia = valorReferencia.getText().trim();

        switch (opcion) {
            case "Insertar al inicio" -> lista.insertarInicio(valor);
            case "Insertar al final" -> lista.insertarFinal(valor);
            case "Insertar antes de X" -> lista.insertarAntes(valor, referencia);
            case "Insertar despues de X" -> lista.insertarDespues(valor, referencia);
            case "Eliminar al inicio" -> lista.eliminarInicio();
            case "Eliminar al final" -> lista.eliminarFinal();
            case "Elimina X" -> lista.eliminarEste(valor);
            case "Elimina antes de X" -> lista.eliminarAntesDe(valor);
        }

        renderNodos();
        nuevoValor.setText("");
        valorReferencia.setText("");
        nuevoValor.requestFocus();
    }//GEN-LAST:event_botonEjecutarActionPerformed

    private void selecionarAlgoritmoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selecionarAlgoritmoItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String seleccion = (String) selecionarAlgoritmo.getSelectedItem();

            labelValor.setText("Ingrese valor a insertar");
            nuevoValor.setEnabled(true);
            mostrarReferencia(false);

            switch (seleccion) {
                case "Insertar antes de X" -> mostrarReferencia(true);
                case "Insertar despues de X" -> mostrarReferencia(true);
                case "Eliminar al inicio" -> {
                    labelValor.setText("No disponible");
                    nuevoValor.setEnabled(false);
                }
                case "Eliminar al final" -> {
                    labelValor.setText("No diseponible");
                    nuevoValor.setEnabled(false);
                }
                case "Elimina X" -> labelValor.setText("Ingrese la referencia");
                case "Elimina antes de X" -> labelValor.setText("Ingrese la referencia");
            }
        }
    }//GEN-LAST:event_selecionarAlgoritmoItemStateChanged

    private void mostrarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarListaActionPerformed
        // TODO add your handling code here:
        String texto = "La Lista tiene: " + lista.toString();
        Aviso.warn(texto);
    }//GEN-LAST:event_mostrarListaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonEjecutar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelAlgoritmos;
    private javax.swing.JLabel labelReferencia;
    private javax.swing.JLabel labelValor;
    private javax.swing.JButton mostrarLista;
    private javax.swing.JTextField nuevoValor;
    private javax.swing.JLabel pageTitle;
    private javax.swing.JComboBox<String> selecionarAlgoritmo;
    private javax.swing.JLabel titleSeccion;
    private javax.swing.JTextField valorReferencia;
    private javax.swing.JScrollPane visorLista;
    private javax.swing.JPanel visorPanel;
    // End of variables declaration//GEN-END:variables
}
